@page "/peliculas/crear"
@inject NavigationManager NavManager
@inject IRepositorio repositorio
@inject IMostrarMensajes mensajes

<h3>Crear Pelicula</h3>

@if ( mostrarFormulario )
{
<FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear"
                     GenerosNoSeleccionados="GenerosNoSeleccionados"></FormularioPeliculas>
}
else
{
    <text>Cargando...</text>
}


@code {
    private bool mostrarFormulario { get; set; } = false;
    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();

    protected async override Task OnInitializedAsync()
    {
        var responseHTTP = await repositorio.Get<List<Genero>>("api/generos");
        GenerosNoSeleccionados = responseHTTP.Response;
        mostrarFormulario = true;
    }

    async Task Crear()
    {
        var httpResponse = await repositorio.Post<Pelicula, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mensajes.MostrarMensajeError(mensajeError);
        }
        else
        {
            var PeliculaId = httpResponse.Response;
            NavManager.NavigateTo($"/pelicula/{PeliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }
    }

}
